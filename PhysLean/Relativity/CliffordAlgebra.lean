/-
Copyright (c) 2024 Joseph Tooby-Smith. All rights reserved.
Released under Apache 2.0 license as described in the file LICENSE.
Authors: Joseph Tooby-Smith
-/
import Mathlib.Analysis.Complex.Basic
import Mathlib.Data.Matrix.Reflection
import Mathlib.LinearAlgebra.CliffordAlgebra.Basic
import PhysLean.Meta.TODO.Basic
/-!
# The Clifford Algebra

This file defines the Gamma matrices.

-/
TODO "6VZF2" "Prove algebra generated by gamma matrices is isomorphic to Clifford algebra."
namespace spaceTime
open Complex

noncomputable section diracRepresentation

/-- The γ⁰ gamma matrix in the Dirac representation. -/
def γ0 : Matrix (Fin 4) (Fin 4) ℂ :=
  !![1, 0, 0, 0; 0, 1, 0, 0; 0, 0, -1, 0; 0, 0, 0, -1]

/-- The γ¹ gamma matrix in the Dirac representation. -/
def γ1 : Matrix (Fin 4) (Fin 4) ℂ :=
  !![0, 0, 0, 1; 0, 0, 1, 0; 0, -1, 0, 0; -1, 0, 0, 0]

/-- The γ² gamma matrix in the Dirac representation. -/
def γ2 : Matrix (Fin 4) (Fin 4) ℂ :=
  !![0, 0, 0, - I; 0, 0, I, 0; 0, I, 0, 0; -I, 0, 0, 0]

/-- The γ³ gamma matrix in the Dirac representation. -/
def γ3 : Matrix (Fin 4) (Fin 4) ℂ :=
  !![0, 0, 1, 0; 0, 0, 0, -1; -1, 0, 0, 0; 0, 1, 0, 0]

theorem _root_.Matrix.one_fin_four {α} [Zero α] [One α] :
    (1 : Matrix (Fin 4) (Fin 4) α) = !![1, 0, 0, 0; 0, 1, 0, 0; 0, 0, 1, 0; 0, 0, 0, 1] :=
  Matrix.etaExpand_eq _ |>.symm

@[simp] lemma γ0_mul_γ0 : γ0 * γ0 = 1 := by simp [γ0, Matrix.one_fin_four]
@[simp] lemma γ1_mul_γ1 : γ1 * γ1 = -1 := by simp [γ1, Matrix.one_fin_four]
@[simp] lemma γ2_mul_γ2 : γ2 * γ2 = -1 := by simp [γ2, Matrix.one_fin_four]
@[simp] lemma γ3_mul_γ3 : γ3 * γ3 = -1 := by simp [γ3, Matrix.one_fin_four]

@[simp] lemma γ1_mul_γ0 : γ1 * γ0 = -(γ0 * γ1) := by simp [γ0, γ1]
@[simp] lemma γ2_mul_γ0 : γ2 * γ0 = -(γ0 * γ2) := by simp [γ0, γ2]
@[simp] lemma γ3_mul_γ0 : γ3 * γ0 = -(γ0 * γ3) := by simp [γ0, γ3]
@[simp] lemma γ2_mul_γ1 : γ2 * γ1 = -(γ1 * γ2) := by simp [γ1, γ2]
@[simp] lemma γ3_mul_γ1 : γ3 * γ1 = -(γ1 * γ3) := by simp [γ1, γ3]
@[simp] lemma γ3_mul_γ2 : γ3 * γ2 = -(γ2 * γ3) := by simp [γ2, γ3]

/-- The γ⁵ gamma matrix in the Dirac representation. -/
def γ5 : Matrix (Fin 4) (Fin 4) ℂ := I • (γ0 * γ1 * γ2 * γ3)

/-- The γ gamma matrices in the Dirac representation. -/
@[simp]
def γ : Fin 4 → Matrix (Fin 4) (Fin 4) ℂ := ![γ0, γ1, γ2, γ3]

namespace γ

open spaceTime

variable (μ ν : Fin 4)

/-- The subset of `Matrix (Fin 4) (Fin 4) ℂ` formed by the gamma matrices in the Dirac
representation. -/
@[simp]
def γSet : Set (Matrix (Fin 4) (Fin 4) ℂ) := {γ i | i : Fin 4}

lemma γ_in_γSet (μ : Fin 4) : γ μ ∈ γSet := by
  simp [γSet]

/-- The algebra generated by the gamma matrices in the Dirac representation. -/
def diracAlgebra : Subalgebra ℝ (Matrix (Fin 4) (Fin 4) ℂ) :=
  Algebra.adjoin ℝ γSet

lemma γSet_subset_diracAlgebra : γSet ⊆ diracAlgebra :=
  Algebra.subset_adjoin

lemma γ_in_diracAlgebra (μ : Fin 4) : γ μ ∈ diracAlgebra :=
  γSet_subset_diracAlgebra (γ_in_γSet μ)

/-- The quadratic form of the clifford algebra corresponding to the `γ` matrices. -/
@[simps!]
def diracForm : QuadraticForm ℝ (Fin 4 → ℝ) :=
  QuadraticMap.sq.comp (LinearMap.proj 0)
    - QuadraticMap.sq.comp (LinearMap.proj 1)
    - QuadraticMap.sq.comp (LinearMap.proj 2)
    - QuadraticMap.sq.comp (LinearMap.proj 3)

/-- The injection from the clifford algebra over `diracForm` into the algebra generated by the
`γ` matrices. -/
def ofCliffordAlgebra : CliffordAlgebra diracForm →ₐ[ℝ] diracAlgebra :=
  CliffordAlgebra.lift _
    ⟨∑ i, (LinearMap.proj i).smulRight ⟨γ i, γ_in_diracAlgebra _⟩, fun v => by
      ext : 1
      simp [Fin.sum_univ_four, mul_add, add_mul, smul_mul_smul, ← map_mul, ← map_sub, ← map_add,
        Algebra.algebraMap_eq_smul_one]
      module⟩

/-- The generators of the clifford algebra correspond to the elements `γ`. -/
@[simp]
lemma ofCliffordAlgebra_ι_single (i : Fin 4) (r : ℝ) :
    ofCliffordAlgebra (CliffordAlgebra.ι _ (Pi.single i r)) = r • ⟨γ i, γ_in_diracAlgebra _⟩ :=
  CliffordAlgebra.lift_ι_apply _ _ _ |>.trans <| Subtype.ext <| by
    simp +contextual [Fintype.sum_eq_single i, -γ]

end γ

end diracRepresentation
end spaceTime
